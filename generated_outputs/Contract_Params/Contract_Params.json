{
  "compilation_info": {
    "optimization_level": 1,
    "type_inference_enabled": true
  },
  "contract_name": "Contract_Params",
  "events": [],
  "instructions_count": 98,
  "methods": [
    {
      "name": "test",
      "offset": 77,
      "parameters": [],
      "return_type": "Integer",
      "safe": false
    }
  ],
  "pseudocode": "void main() {\n    // Initialize 5 local slots;\n    // Unhandled opcode: STARG5 at offset 5;\n    arg_16 = arg_202;\n    // Unhandled opcode: STARG0 at offset 11;\n    // Unhandled opcode: JMP at offset 12;\n    while ((arg_1 < arg_0))\n        // Unhandled opcode: JMPLT at offset 73;\n        if ((arg_1 < arg_0))\n         {\n\n            // true branch -> block_1\n        }\n else  {\n            // false branch -> block_8\n        }\n\n    }\n    local3 = arg_6;\n    arg_6.Clear();\n    // Unhandled opcode: STARG1 at offset 17;\n    temp2 = (0 + local4);\n    // Unhandled opcode: JMPGE at offset 27;\n    if ((temp2 >= -2147483648))\n     {\n\n        // true branch -> block_3\n    }\n else  {\n        // false branch -> block_2\n    }\n\n    // Unhandled opcode: CALL at offset 78;\n    // Unhandled opcode: JMPLE at offset 37;\n    if ((temp2 <= 2147483647))\n     {\n\n        // true branch -> block_6\n    }\n else  {\n        // false branch -> block_4\n    }\n\n    // Unhandled opcode: JMP at offset 29;\n    // Unhandled opcode: CALL at offset 83;\n    temp3 = (arg_1 + 1);\n    // Unhandled opcode: STARG0 at offset 70;\n    temp4 = (temp2 & 4294967295);\n    // Unhandled opcode: JMPLE at offset 55;\n    if ((temp4 <= 2147483647))\n     {\n\n        // true branch -> block_6\n    }\n else  {\n        // false branch -> block_5\n    }\n\n    temp5 = (1 + 1);\n    // Unhandled opcode: JMPGE at offset 92;\n    if ((temp5 >= -2147483648))\n     {\n\n        // true branch -> block_12\n    }\n else  {\n        // false branch -> block_11\n    }\n\n    temp6 = (temp4 - 4294967296);\n    // Unhandled opcode: JMPLE at offset 102;\n    if ((temp5 <= 2147483647))\n     {\n\n        // true branch -> block_15\n    }\n else  {\n        // false branch -> block_13\n    }\n\n    // Unhandled opcode: JMP at offset 94;\n    // Unhandled opcode: CALL_L at offset 136;\n    temp7 = (temp5 & 4294967295);\n    // Unhandled opcode: JMPLE at offset 120;\n    if ((temp7 <= 2147483647))\n     {\n\n        // true branch -> block_15\n    }\n else  {\n        // false branch -> block_14\n    }\n\n    temp8 = (2 + 2);\n    // Unhandled opcode: JMPGE at offset 148;\n    if ((temp8 >= -2147483648))\n     {\n\n        // true branch -> block_18\n    }\n else  {\n        // false branch -> block_17\n    }\n\n    temp9 = (temp7 - 4294967296);\n    // Unhandled opcode: JMPLE at offset 158;\n    if ((temp8 <= 2147483647))\n     {\n\n        // true branch -> block_21\n    }\n else  {\n        // false branch -> block_19\n    }\n\n    // Unhandled opcode: JMP at offset 150;\n    // Unhandled opcode: CALL_L at offset 192;\n    temp10 = (temp8 & 4294967295);\n    // Unhandled opcode: JMPLE at offset 176;\n    if ((temp10 <= 2147483647))\n     {\n\n        // true branch -> block_21\n    }\n else  {\n        // false branch -> block_20\n    }\n\n    temp11 = (4 + 2);\n    // Unhandled opcode: JMPGE at offset 204;\n    if ((temp11 >= -2147483648))\n     {\n\n        // true branch -> block_24\n    }\n else  {\n        // false branch -> block_23\n    }\n\n    temp12 = (temp10 - 4294967296);\n    // Unhandled opcode: JMPLE at offset 214;\n    if ((temp11 <= 2147483647))\n     {\n\n        // true branch -> block_27\n    }\n else  {\n        // false branch -> block_25\n    }\n\n    // Unhandled opcode: JMP at offset 206;\n    // Unhandled opcode: RET at offset 244;\n    return temp13\n    temp14 = (temp11 & 4294967295);\n    // Unhandled opcode: JMPLE at offset 232;\n    if ((temp14 <= 2147483647))\n     {\n\n        // true branch -> block_27\n    }\n else  {\n        // false branch -> block_26\n    }\n\n    temp13 = (temp14 - 4294967296);\n}\n"
}