{
  "compilation_info": {
    "optimization_level": 1,
    "type_inference_enabled": true
  },
  "contract_name": "Contract_Returns",
  "events": [],
  "instructions_count": 216,
  "methods": [
    {
      "name": "sum",
      "offset": 0,
      "parameters": [
        {
          "name": "a",
          "param_type": "Integer"
        },
        {
          "name": "b",
          "param_type": "Integer"
        }
      ],
      "return_type": "Integer",
      "safe": false
    },
    {
      "name": "subtract",
      "offset": 53,
      "parameters": [
        {
          "name": "a",
          "param_type": "Integer"
        },
        {
          "name": "b",
          "param_type": "Integer"
        }
      ],
      "return_type": "Integer",
      "safe": false
    },
    {
      "name": "div",
      "offset": 106,
      "parameters": [
        {
          "name": "a",
          "param_type": "Integer"
        },
        {
          "name": "b",
          "param_type": "Integer"
        }
      ],
      "return_type": "Array",
      "safe": false
    },
    {
      "name": "mix",
      "offset": 118,
      "parameters": [
        {
          "name": "a",
          "param_type": "Integer"
        },
        {
          "name": "b",
          "param_type": "Integer"
        }
      ],
      "return_type": "Integer",
      "safe": false
    },
    {
      "name": "byteStringAdd",
      "offset": 136,
      "parameters": [
        {
          "name": "a",
          "param_type": "ByteArray"
        },
        {
          "name": "b",
          "param_type": "ByteArray"
        }
      ],
      "return_type": "ByteArray",
      "safe": false
    },
    {
      "name": "tryReturn",
      "offset": 495,
      "parameters": [],
      "return_type": "Integer",
      "safe": false
    }
  ],
  "pseudocode": "void main() {\n    // Initialize 0 local slots, 2 static slots;\n    // Unhandled opcode: STARG5 at offset 3;\n    // Unhandled opcode: STARG6 at offset 4;\n    temp0 = (arg_2 + arg_3);\n    if ((temp0 >= -2147483648))\n     {\n\n        // true branch -> block_2\n    }\n else  {\n        // false branch -> block_1\n    }\n\n    if ((temp0 <= 2147483647))\n     {\n\n        // true branch -> block_5\n    }\n else  {\n        // false branch -> block_3\n    }\n\n    return temp1\n    temp2 = (temp0 & 4294967295);\n    if ((temp2 <= 2147483647))\n     {\n\n        // true branch -> block_5\n    }\n else  {\n        // false branch -> block_4\n    }\n\n    temp1 = (temp2 - 4294967296);\n}\n"
}