0000: INITSLOT SlotInit { static_slots: 0, local_slots: 1 }  ; INITSLOT
0004: PUSHINT8 Integer(80)  ; PUSHINT8
0008: PUSHINT8 Integer(60)  ; PUSHINT8
000c: PUSHINT8 Integer(80)  ; PUSHINT8
0010: PUSH3  ; PUSH3
0014: PACKARRAY  ; PACKARRAY
0018: PUSH0  ; PUSH0
001c: PUSH1  ; PUSH1
0020: PUSHNULL  ; PUSHNULL
0024: PUSH4  ; PUSH4
0028: PACKARRAY  ; PACKARRAY
002c: PUSHDATA1 Bytes([74, 111, 104, 110])  ; PUSHDATA1
0030: OVER  ; OVER
0034: CALL_L JumpTarget32(135)  ; CALL_L
0038: LDARG6  ; LDARG6
003c: LDLOC SlotIndex(53)  ; LDLOC
0040: JMPLE_L JumpTarget32(637534209)  ; JMPLE_L
0044: STARG6  ; STARG6
0048: LDLOC SlotIndex(74)  ; LDLOC
004c: PUSH1  ; PUSH1
0050: CLEARITEMS  ; CLEARITEMS
0054: TUCK  ; TUCK
0058: INC  ; INC
005c: DUP  ; DUP
0060: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0064: JMPGE JumpTarget8(4)  ; JMPGE
0068: JMP JumpTarget8(10)  ; JMP
006c: DUP  ; DUP
0070: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0074: JMPLE JumpTarget8(30)  ; JMPLE
0078: PUSHINT64 Integer(4294967295)  ; PUSHINT64
007c: AND  ; AND
0080: DUP  ; DUP
0084: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0088: JMPLE JumpTarget8(12)  ; JMPLE
008c: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0090: SUB  ; SUB
0094: PUSH1  ; PUSH1
0098: SWAP  ; SWAP
009c: HASKEY  ; HASKEY
00a0: DROP  ; DROP
00a4: LDLOC SlotIndex(19)  ; LDLOC
00a8: CLEARITEMS  ; CLEARITEMS
00ac: PUSH1  ; PUSH1
00b0: OVER  ; OVER
00b4: OVER  ; OVER
00b8: CLEARITEMS  ; CLEARITEMS
00bc: DUP  ; DUP
00c0: REVERSE4  ; REVERSE4
00c4: REVERSE3  ; REVERSE3
00c8: INC  ; INC
00cc: DUP  ; DUP
00d0: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
00d4: JMPGE JumpTarget8(4)  ; JMPGE
00d8: JMP JumpTarget8(10)  ; JMP
00dc: DUP  ; DUP
00e0: PUSHINT32 Integer(2147483647)  ; PUSHINT32
00e4: JMPLE JumpTarget8(30)  ; JMPLE
00e8: PUSHINT64 Integer(4294967295)  ; PUSHINT64
00ec: AND  ; AND
00f0: DUP  ; DUP
00f4: PUSHINT32 Integer(2147483647)  ; PUSHINT32
00f8: JMPLE JumpTarget8(12)  ; JMPLE
00fc: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0100: SUB  ; SUB
0104: HASKEY  ; HASKEY
0108: DROP  ; DROP
010c: LDLOC SlotIndex(16)  ; LDLOC
0110: CLEARITEMS  ; CLEARITEMS
0114: RET  ; RET
0118: PUSHNULL  ; PUSHNULL
011c: RET  ; RET
0120: INITSLOT SlotInit { static_slots: 2, local_slots: 0 }  ; INITSLOT
0124: STARG6  ; STARG6
0128: DUP  ; DUP
012c: STARG5  ; STARG5
0130: PUSH0  ; PUSH0
0134: ROT  ; ROT
0138: HASKEY  ; HASKEY
013c: DROP  ; DROP
0140: STARG5  ; STARG5
0144: DUP  ; DUP
0148: PUSH1  ; PUSH1
014c: CLEARITEMS  ; CLEARITEMS
0150: TUCK  ; TUCK
0154: DEC  ; DEC
0158: DUP  ; DUP
015c: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0160: JMPGE JumpTarget8(4)  ; JMPGE
0164: JMP JumpTarget8(10)  ; JMP
0168: DUP  ; DUP
016c: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0170: JMPLE JumpTarget8(30)  ; JMPLE
0174: PUSHINT64 Integer(4294967295)  ; PUSHINT64
0178: AND  ; AND
017c: DUP  ; DUP
0180: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0184: JMPLE JumpTarget8(12)  ; JMPLE
0188: PUSHINT64 Integer(4294967296)  ; PUSHINT64
018c: SUB  ; SUB
0190: PUSH1  ; PUSH1
0194: SWAP  ; SWAP
0198: HASKEY  ; HASKEY
019c: DROP  ; DROP
01a0: STARG5  ; STARG5
01a4: DUP  ; DUP
01a8: PUSH1  ; PUSH1
01ac: CLEARITEMS  ; CLEARITEMS
01b0: INC  ; INC
01b4: DUP  ; DUP
01b8: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
01bc: JMPGE JumpTarget8(4)  ; JMPGE
01c0: JMP JumpTarget8(10)  ; JMP
01c4: DUP  ; DUP
01c8: PUSHINT32 Integer(2147483647)  ; PUSHINT32
01cc: JMPLE JumpTarget8(30)  ; JMPLE
01d0: PUSHINT64 Integer(4294967295)  ; PUSHINT64
01d4: AND  ; AND
01d8: DUP  ; DUP
01dc: PUSHINT32 Integer(2147483647)  ; PUSHINT32
01e0: JMPLE JumpTarget8(12)  ; JMPLE
01e4: PUSHINT64 Integer(4294967296)  ; PUSHINT64
01e8: SUB  ; SUB
01ec: TUCK  ; TUCK
01f0: PUSH1  ; PUSH1
01f4: SWAP  ; SWAP
01f8: HASKEY  ; HASKEY
01fc: DROP  ; DROP
0200: STARG5  ; STARG5
0204: DUP  ; DUP
0208: PUSH1  ; PUSH1
020c: CLEARITEMS  ; CLEARITEMS
0210: DEC  ; DEC
0214: DUP  ; DUP
0218: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
021c: JMPGE JumpTarget8(4)  ; JMPGE
0220: JMP JumpTarget8(10)  ; JMP
0224: DUP  ; DUP
0228: PUSHINT32 Integer(2147483647)  ; PUSHINT32
022c: JMPLE JumpTarget8(30)  ; JMPLE
0230: PUSHINT64 Integer(4294967295)  ; PUSHINT64
0234: AND  ; AND
0238: DUP  ; DUP
023c: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0240: JMPLE JumpTarget8(12)  ; JMPLE
0244: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0248: SUB  ; SUB
024c: TUCK  ; TUCK
0250: PUSH1  ; PUSH1
0254: SWAP  ; SWAP
0258: HASKEY  ; HASKEY
025c: DROP  ; DROP
0260: RET  ; RET
0264: INITSLOT SlotInit { static_slots: 1, local_slots: 1 }  ; INITSLOT
0268: STARG5  ; STARG5
026c: LDARG6  ; LDARG6
0270: LDLOC SlotIndex(216)  ; LDLOC
0274: JMPIFNOT JumpTarget8(4)  ; JMPIFNOT
0278: PUSHF  ; PUSHF
027c: RET  ; RET
0280: STARG5  ; STARG5
0284: PUSH0  ; PUSH0
0288: CLEARITEMS  ; CLEARITEMS
028c: LDARG6  ; LDARG6
0290: LDLOC SlotIndex(216)  ; LDLOC
0294: BOOLAND  ; BOOLAND
0298: RET  ; RET
029c: INITSLOT SlotInit { static_slots: 0, local_slots: 1 }  ; INITSLOT
02a0: PUSHINT8 Integer(80)  ; PUSHINT8
02a4: PUSHINT8 Integer(60)  ; PUSHINT8
02a8: PUSHINT8 Integer(80)  ; PUSHINT8
02ac: PUSH3  ; PUSH3
02b0: PACKARRAY  ; PACKARRAY
02b4: PUSH0  ; PUSH0
02b8: PUSH1  ; PUSH1
02bc: PUSHNULL  ; PUSHNULL
02c0: PUSH4  ; PUSH4
02c4: PACKARRAY  ; PACKARRAY
02c8: PUSHDATA1 Bytes([85, 110, 100, 101, 102, 105, 110, 101, 100])  ; PUSHDATA1
02cc: OVER  ; OVER
02d0: CALL_L JumpTarget32(-226)  ; CALL_L
02d4: LDARG6  ; LDARG6
02d8: LDLOC SlotIndex(17)  ; LDLOC
02dc: CLEARITEMS  ; CLEARITEMS
02e0: PUSH0  ; PUSH0
02e4: EQUAL  ; EQUAL
02e8: ASSERT  ; ASSERT
02ec: LDLOC SlotIndex(74)  ; LDLOC
02f0: PUSH1  ; PUSH1
02f4: CLEARITEMS  ; CLEARITEMS
02f8: TUCK  ; TUCK
02fc: INC  ; INC
0300: DUP  ; DUP
0304: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0308: JMPGE JumpTarget8(4)  ; JMPGE
030c: JMP JumpTarget8(10)  ; JMP
0310: DUP  ; DUP
0314: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0318: JMPLE JumpTarget8(30)  ; JMPLE
031c: PUSHINT64 Integer(4294967295)  ; PUSHINT64
0320: AND  ; AND
0324: DUP  ; DUP
0328: PUSHINT32 Integer(2147483647)  ; PUSHINT32
032c: JMPLE JumpTarget8(12)  ; JMPLE
0330: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0334: SUB  ; SUB
0338: PUSH1  ; PUSH1
033c: SWAP  ; SWAP
0340: HASKEY  ; HASKEY
0344: DUP  ; DUP
0348: LDLOC SlotIndex(17)  ; LDLOC
034c: ROT  ; ROT
0350: HASKEY  ; HASKEY
0354: DROP  ; DROP
0358: LDLOC SlotIndex(17)  ; LDLOC
035c: CLEARITEMS  ; CLEARITEMS
0360: PUSH0  ; PUSH0
0364: EQUAL  ; EQUAL
0368: ASSERT  ; ASSERT
036c: LDLOC SlotIndex(74)  ; LDLOC
0370: PUSH1  ; PUSH1
0374: CLEARITEMS  ; CLEARITEMS
0378: INC  ; INC
037c: DUP  ; DUP
0380: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0384: JMPGE JumpTarget8(4)  ; JMPGE
0388: JMP JumpTarget8(10)  ; JMP
038c: DUP  ; DUP
0390: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0394: JMPLE JumpTarget8(30)  ; JMPLE
0398: PUSHINT64 Integer(4294967295)  ; PUSHINT64
039c: AND  ; AND
03a0: DUP  ; DUP
03a4: PUSHINT32 Integer(2147483647)  ; PUSHINT32
03a8: JMPLE JumpTarget8(12)  ; JMPLE
03ac: PUSHINT64 Integer(4294967296)  ; PUSHINT64
03b0: SUB  ; SUB
03b4: TUCK  ; TUCK
03b8: PUSH1  ; PUSH1
03bc: SWAP  ; SWAP
03c0: HASKEY  ; HASKEY
03c4: DUP  ; DUP
03c8: LDLOC SlotIndex(17)  ; LDLOC
03cc: ROT  ; ROT
03d0: HASKEY  ; HASKEY
03d4: DROP  ; DROP
03d8: LDLOC SlotIndex(17)  ; LDLOC
03dc: CLEARITEMS  ; CLEARITEMS
03e0: PUSH1  ; PUSH1
03e4: EQUAL  ; EQUAL
03e8: ASSERT  ; ASSERT
03ec: LDLOC SlotIndex(19)  ; LDLOC
03f0: CLEARITEMS  ; CLEARITEMS
03f4: PUSH0  ; PUSH0
03f8: CLEARITEMS  ; CLEARITEMS
03fc: PUSHINT8 Integer(80)  ; PUSHINT8
0400: EQUAL  ; EQUAL
0404: ASSERT  ; ASSERT
0408: LDLOC SlotIndex(19)  ; LDLOC
040c: CLEARITEMS  ; CLEARITEMS
0410: PUSH0  ; PUSH0
0414: OVER  ; OVER
0418: OVER  ; OVER
041c: CLEARITEMS  ; CLEARITEMS
0420: DUP  ; DUP
0424: REVERSE4  ; REVERSE4
0428: REVERSE3  ; REVERSE3
042c: INC  ; INC
0430: DUP  ; DUP
0434: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0438: JMPGE JumpTarget8(4)  ; JMPGE
043c: JMP JumpTarget8(10)  ; JMP
0440: DUP  ; DUP
0444: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0448: JMPLE JumpTarget8(30)  ; JMPLE
044c: PUSHINT64 Integer(4294967295)  ; PUSHINT64
0450: AND  ; AND
0454: DUP  ; DUP
0458: PUSHINT32 Integer(2147483647)  ; PUSHINT32
045c: JMPLE JumpTarget8(12)  ; JMPLE
0460: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0464: SUB  ; SUB
0468: HASKEY  ; HASKEY
046c: DUP  ; DUP
0470: LDLOC SlotIndex(19)  ; LDLOC
0474: CLEARITEMS  ; CLEARITEMS
0478: PUSH0  ; PUSH0
047c: ROT  ; ROT
0480: HASKEY  ; HASKEY
0484: DROP  ; DROP
0488: LDLOC SlotIndex(19)  ; LDLOC
048c: CLEARITEMS  ; CLEARITEMS
0490: PUSH0  ; PUSH0
0494: CLEARITEMS  ; CLEARITEMS
0498: PUSHINT8 Integer(80)  ; PUSHINT8
049c: EQUAL  ; EQUAL
04a0: ASSERT  ; ASSERT
04a4: LDLOC SlotIndex(19)  ; LDLOC
04a8: CLEARITEMS  ; CLEARITEMS
04ac: PUSH0  ; PUSH0
04b0: OVER  ; OVER
04b4: OVER  ; OVER
04b8: CLEARITEMS  ; CLEARITEMS
04bc: INC  ; INC
04c0: DUP  ; DUP
04c4: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
04c8: JMPGE JumpTarget8(4)  ; JMPGE
04cc: JMP JumpTarget8(10)  ; JMP
04d0: DUP  ; DUP
04d4: PUSHINT32 Integer(2147483647)  ; PUSHINT32
04d8: JMPLE JumpTarget8(30)  ; JMPLE
04dc: PUSHINT64 Integer(4294967295)  ; PUSHINT64
04e0: AND  ; AND
04e4: DUP  ; DUP
04e8: PUSHINT32 Integer(2147483647)  ; PUSHINT32
04ec: JMPLE JumpTarget8(12)  ; JMPLE
04f0: PUSHINT64 Integer(4294967296)  ; PUSHINT64
04f4: SUB  ; SUB
04f8: DUP  ; DUP
04fc: REVERSE4  ; REVERSE4
0500: REVERSE3  ; REVERSE3
0504: HASKEY  ; HASKEY
0508: DUP  ; DUP
050c: LDLOC SlotIndex(19)  ; LDLOC
0510: CLEARITEMS  ; CLEARITEMS
0514: PUSH0  ; PUSH0
0518: ROT  ; ROT
051c: HASKEY  ; HASKEY
0520: DROP  ; DROP
0524: LDLOC SlotIndex(19)  ; LDLOC
0528: CLEARITEMS  ; CLEARITEMS
052c: PUSH0  ; PUSH0
0530: CLEARITEMS  ; CLEARITEMS
0534: PUSHINT8 Integer(81)  ; PUSHINT8
0538: EQUAL  ; EQUAL
053c: ASSERT  ; ASSERT
0540: LDLOC SlotIndex(74)  ; LDLOC
0544: PUSH2  ; PUSH2
0548: CLEARITEMS  ; CLEARITEMS
054c: TUCK  ; TUCK
0550: INC  ; INC
0554: DUP  ; DUP
0558: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
055c: JMPGE JumpTarget8(4)  ; JMPGE
0560: JMP JumpTarget8(10)  ; JMP
0564: DUP  ; DUP
0568: PUSHINT32 Integer(2147483647)  ; PUSHINT32
056c: JMPLE JumpTarget8(30)  ; JMPLE
0570: PUSHINT64 Integer(4294967295)  ; PUSHINT64
0574: AND  ; AND
0578: DUP  ; DUP
057c: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0580: JMPLE JumpTarget8(12)  ; JMPLE
0584: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0588: SUB  ; SUB
058c: SWAP  ; SWAP
0590: PUSH2  ; PUSH2
0594: ROT  ; ROT
0598: HASKEY  ; HASKEY
059c: PUSH0  ; PUSH0
05a0: EQUAL  ; EQUAL
05a4: ASSERT  ; ASSERT
05a8: RET  ; RET
05ac: CALL JumpTarget8(115)  ; CALL
05b0: LDSFLD0  ; LDSFLD0
05b4: DUP  ; DUP
05b8: DEC  ; DEC
05bc: DUP  ; DUP
05c0: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
05c4: JMPGE JumpTarget8(4)  ; JMPGE
05c8: JMP JumpTarget8(10)  ; JMP
05cc: DUP  ; DUP
05d0: PUSHINT32 Integer(2147483647)  ; PUSHINT32
05d4: JMPLE JumpTarget8(30)  ; JMPLE
05d8: PUSHINT64 Integer(4294967295)  ; PUSHINT64
05dc: AND  ; AND
05e0: DUP  ; DUP
05e4: PUSHINT32 Integer(2147483647)  ; PUSHINT32
05e8: JMPLE JumpTarget8(12)  ; JMPLE
05ec: PUSHINT64 Integer(4294967296)  ; PUSHINT64
05f0: SUB  ; SUB
05f4: STSFLD SlotIndex(144)  ; STSFLD
05f8: PUSHINT16 Integer(-172)  ; PUSHINT16
05fc: EQUAL  ; EQUAL
0600: ASSERT  ; ASSERT
0604: LDSFLD0  ; LDSFLD0
0608: INC  ; INC
060c: DUP  ; DUP
0610: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0614: JMPGE JumpTarget8(4)  ; JMPGE
0618: JMP JumpTarget8(10)  ; JMP
061c: DUP  ; DUP
0620: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0624: JMPLE JumpTarget8(30)  ; JMPLE
0628: PUSHINT64 Integer(4294967295)  ; PUSHINT64
062c: AND  ; AND
0630: DUP  ; DUP
0634: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0638: JMPLE JumpTarget8(12)  ; JMPLE
063c: PUSHINT64 Integer(4294967296)  ; PUSHINT64
0640: SUB  ; SUB
0644: DUP  ; DUP
0648: STSFLD SlotIndex(144)  ; STSFLD
064c: PUSHINT16 Integer(-172)  ; PUSHINT16
0650: EQUAL  ; EQUAL
0654: ASSERT  ; ASSERT
0658: RET  ; RET
065c: LDSFLD0  ; LDSFLD0
0660: DUP  ; DUP
0664: INC  ; INC
0668: DUP  ; DUP
066c: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
0670: JMPGE JumpTarget8(4)  ; JMPGE
0674: JMP JumpTarget8(10)  ; JMP
0678: DUP  ; DUP
067c: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0680: JMPLE JumpTarget8(30)  ; JMPLE
0684: PUSHINT64 Integer(4294967295)  ; PUSHINT64
0688: AND  ; AND
068c: DUP  ; DUP
0690: PUSHINT32 Integer(2147483647)  ; PUSHINT32
0694: JMPLE JumpTarget8(12)  ; JMPLE
0698: PUSHINT64 Integer(4294967296)  ; PUSHINT64
069c: SUB  ; SUB
06a0: STSFLD SlotIndex(144)  ; STSFLD
06a4: PUSHINT16 Integer(-171)  ; PUSHINT16
06a8: EQUAL  ; EQUAL
06ac: ASSERT  ; ASSERT
06b0: LDSFLD1  ; LDSFLD1
06b4: DEC  ; DEC
06b8: DUP  ; DUP
06bc: PUSHINT32 Integer(-2147483648)  ; PUSHINT32
06c0: JMPGE JumpTarget8(4)  ; JMPGE
06c4: JMP JumpTarget8(10)  ; JMP
06c8: DUP  ; DUP
06cc: PUSHINT32 Integer(2147483647)  ; PUSHINT32
06d0: JMPLE JumpTarget8(30)  ; JMPLE
06d4: PUSHINT64 Integer(4294967295)  ; PUSHINT64
06d8: AND  ; AND
06dc: DUP  ; DUP
06e0: PUSHINT32 Integer(2147483647)  ; PUSHINT32
06e4: JMPLE JumpTarget8(12)  ; JMPLE
06e8: PUSHINT64 Integer(4294967296)  ; PUSHINT64
06ec: SUB  ; SUB
06f0: DUP  ; DUP
06f4: LDLOC0  ; LDLOC0
06f8: INVERT  ; INVERT
06fc: PUSHINT8 Integer(-50)  ; PUSHINT8
0700: EQUAL  ; EQUAL
0704: ASSERT  ; ASSERT
0708: RET  ; RET
070c: INITSSLOT Count(2)  ; INITSSLOT
0710: PUSHINT16 Integer(170)  ; PUSHINT16
0714: STSFLD SlotIndex(0)  ; STSFLD
0718: JMPLE JumpTarget8(97)  ; JMPLE
071c: RET  ; RET